type = "closed",
angle = 20),
size=1) +
geom_segment(confident_pat_pairwise_coords,
mapping=aes(x=pat_x, y=pat_y, xend=child_x, yend=child_y,
color=Tree),
arrow = arrow(
length = unit(0.01, "npc"),
type = "closed",
angle = 20),
size=1)
# reworking the map area so it is surrounding the confident stuff
confident_map_area <- get_stamenmap(bbox=c(
left = min(confident_pat_pairwise_coords$child_x - 0.003),
bottom = min(confident_pat_pairwise_coords$child_y - 0.003),
right = max(confident_pat_pairwise_coords$child_x + 0.003),
top = max(confident_pat_pairwise_coords$child_y + 0.003)),
zoom = 14,
maptype = 'terrain')
# map with arrows
ggmap(confident_map_area) +
geom_point(geno_coords, mapping=aes(X, Y), size = 0.5) +
geom_segment(confident_mat_pairwise_coords,
mapping=aes(x=mat_x, y=mat_y, xend=child_x, yend=child_y,
color=Tree),
arrow = arrow(
length = unit(0.01, "npc"),
type = "closed",
angle = 20),
size=1) +
geom_segment(confident_pat_pairwise_coords,
mapping=aes(x=pat_x, y=pat_y, xend=child_x, yend=child_y,
color=Tree),
arrow = arrow(
length = unit(0.01, "npc"),
type = "closed",
angle = 20),
size=1)
library(tidyverse)
library(tidyverse)
head(genotypes)
franz_genotypes <- genotypes %>% select(-`Sample id`)
franz_genotypes
head(genotypes)
genotypes$Tree
franz_genotypes %>% mutate(Tree = paste(Tree, "      ", sep = ""))
franz_genotypes <- genotypes %>%
select(-`Sample id`) %>%
mutate(Tree = paste(Tree, "      ", sep = ""))
franz_genotypes
library(skimr)
skim(franz_genotypes)
str_length(franz_genotypes$Tree)
franz_genotypes <- genotypes %>%
select(-`Sample id`) %>%
mutate(Tree = paste(Tree, "    ", sep = ""))
str_length(franz_genotypes$Tree)
franz_genotypes <- genotypes %>%
select(-`Sample id`) %>%
mutate(Tree = paste("    ", Tree, sep = "")) # adding 4 spaces to match length
str_length(franz_genotypes$Tree)
head(franz_genotypes)
?write_delim
franz_genotypes %>% write_delim('rough-franz-input.txt')
franz_genotypes %>% write_delim('rough-franz-input.txt', delim = " ")
franz_genotypes <- genotypes %>%
select(-`Sample id`) %>%
mutate(Tree = paste("    ", Tree, " 1 ? ? ?", sep = ""))
franz_genotypes %>% write_delim('rough-franz-input.txt', delim = " ")
head(franz_genotypes)
namese(franz_genotypes)
names(franz_genotypes)
franz_genotypes_slashes <- franz_genotypes %>%
mutate(
yb01 = paste(`yb01 Allele#1`, `yb01 Allele#2`, delim="/"),
yb15 = paste(`yb15 Allele#1`, `yb15 Allele#2`, delim="/"),
yb21 = paste(`yb21 Allele#1`, `yb21 Allele#2`, delim="/"),
yb04 = paste(`yb04 Allele#1`, `yb04 Allele#2`, delim="/"),
yb06 = paste(`yb06 Allele#1`, `yb06 Allele#2`, delim="/"),
yb12 = paste(`yb12 Allele#1`, `yb12 Allele#2`, delim="/"),
yb13 = paste(`yb13 Allele#1`, `yb13 Allele#2`, delim="/"),
fil36 = paste(`fil36 Allele#1`, `fil36 Allele#2`, delim="/"),
yb08 = paste(`yb08 Allele#1`, `yb08 Allele#2`, delim="/"),
yb22 = paste(`yb22 Allele#1`, `yb22 Allele#2`, delim="/")
)
franz_genotypes_slashes
names(franz_genotypes_slashes)
franz_genotypes_slashes %>% select("Tree","yb01","yb15","yb21","yb04","yb06","yb12","yb13","fil36","yb08","yb22")
franz_genotypes_slashes <- franz_genotypes %>%
mutate(
yb01 = paste(`yb01 Allele#1`, "/", `yb01 Allele#2`, delim=""),
yb15 = paste(`yb15 Allele#1`, "/", `yb15 Allele#2`, delim=""),
yb21 = paste(`yb21 Allele#1`, "/", `yb21 Allele#2`, delim=""),
yb04 = paste(`yb04 Allele#1`, "/", `yb04 Allele#2`, delim=""),
yb06 = paste(`yb06 Allele#1`, "/", `yb06 Allele#2`, delim=""),
yb12 = paste(`yb12 Allele#1`, "/", `yb12 Allele#2`, delim=""),
yb13 = paste(`yb13 Allele#1`, "/", `yb13 Allele#2`, delim=""),
fil36 = paste(`fil36 Allele#1`, "/", `fil36 Allele#2`, delim=""),
yb08 = paste(`yb08 Allele#1`, "/", `yb08 Allele#2`, delim=""),
yb22 = paste(`yb22 Allele#1`, "/", `yb22 Allele#2`, delim="")
)
franz_genotypes_slashes %>% select("Tree","yb01","yb15","yb21","yb04","yb06","yb12","yb13","fil36","yb08","yb22")
franz_genotypes_slashes <- franz_genotypes %>%
mutate(
yb01 = paste(`yb01 Allele#1`, ".", `yb01 Allele#2`, delim=""),
yb15 = paste(`yb15 Allele#1`, ".", `yb15 Allele#2`, delim=""),
yb21 = paste(`yb21 Allele#1`, ".", `yb21 Allele#2`, delim=""),
yb04 = paste(`yb04 Allele#1`, ".", `yb04 Allele#2`, delim=""),
yb06 = paste(`yb06 Allele#1`, ".", `yb06 Allele#2`, delim=""),
yb12 = paste(`yb12 Allele#1`, ".", `yb12 Allele#2`, delim=""),
yb13 = paste(`yb13 Allele#1`, ".", `yb13 Allele#2`, delim=""),
fil36 = paste(`fil36 Allele#1`, ".", `fil36 Allele#2`, delim=""),
yb08 = paste(`yb08 Allele#1`, ".", `yb08 Allele#2`, delim=""),
yb22 = paste(`yb22 Allele#1`, ".", `yb22 Allele#2`, delim="")
)
franz_genotypes_slashes %>% select("Tree","yb01","yb15","yb21","yb04","yb06","yb12","yb13","fil36","yb08","yb22")
# okay.. doing it the other way with slash
?paste
franz_genotypes_slashes <- franz_genotypes %>%
mutate(
yb01 = paste(`yb01 Allele#1`, ".", `yb01 Allele#2`, sep=""),
yb15 = paste(`yb15 Allele#1`, ".", `yb15 Allele#2`, sep=""),
yb21 = paste(`yb21 Allele#1`, ".", `yb21 Allele#2`, sep=""),
yb04 = paste(`yb04 Allele#1`, ".", `yb04 Allele#2`, sep=""),
yb06 = paste(`yb06 Allele#1`, ".", `yb06 Allele#2`, sep=""),
yb12 = paste(`yb12 Allele#1`, ".", `yb12 Allele#2`, sep=""),
yb13 = paste(`yb13 Allele#1`, ".", `yb13 Allele#2`, sep=""),
fil36 = paste(`fil36 Allele#1`, ".", `fil36 Allele#2`, sep=""),
yb08 = paste(`yb08 Allele#1`, ".", `yb08 Allele#2`, sep=""),
yb22 = paste(`yb22 Allele#1`, ".", `yb22 Allele#2`, sep="")
)
names(franz_genotypes_slashes)
franz_genotypes_slashes %>% select("Tree","yb01","yb15","yb21","yb04","yb06","yb12","yb13","fil36","yb08","yb22")
franz_genotypes_slashes <- franz_genotypes %>%
mutate(
yb01 = paste(`yb01 Allele#1`, "/", `yb01 Allele#2`, sep=""),
yb15 = paste(`yb15 Allele#1`, "/", `yb15 Allele#2`, sep=""),
yb21 = paste(`yb21 Allele#1`, "/", `yb21 Allele#2`, sep=""),
yb04 = paste(`yb04 Allele#1`, "/", `yb04 Allele#2`, sep=""),
yb06 = paste(`yb06 Allele#1`, "/", `yb06 Allele#2`, sep=""),
yb12 = paste(`yb12 Allele#1`, "/", `yb12 Allele#2`, sep=""),
yb13 = paste(`yb13 Allele#1`, "/", `yb13 Allele#2`, sep=""),
fil36 = paste(`fil36 Allele#1`, "/", `fil36 Allele#2`, sep=""),
yb08 = paste(`yb08 Allele#1`, "/", `yb08 Allele#2`, sep=""),
yb22 = paste(`yb22 Allele#1`, "/", `yb22 Allele#2`, sep="")
)
names(franz_genotypes_slashes)
franz_genotypes_slashes %>% select("Tree","yb01","yb15","yb21","yb04","yb06","yb12","yb13","fil36","yb08","yb22")
franz_genotypes_slashes %>% write_delim('rough-franz-input.txt', delim = " ")
franz_genotypes_slashes %>% write_delim('rough-franz-input-slash.txt', delim = " ")
franz_genotypes_slashes <- franz_genotypes_slashes %>% select("Tree","yb01","yb15","yb21","yb04","yb06","yb12","yb13","fil36","yb08","yb22")
franz_genotypes_slashes %>% write_delim('rough-franz-input-slash.txt', delim = " ")
library(tidyverse)
library(ggmap)
read_csv("franz-grouped/cluster1/parentage.csv")
read_csv("franz-grouped/cluster1/parentage.csv") %>% filter(LOD > 3)
cluster_1_franz <- read_csv("franz-grouped/cluster1/parentage.csv") %>% filter(`Pair` > 3)
cluster_1_franz <- read_csv("franz-grouped/cluster1/parentage.csv")
names (cluster_1_franz)
filtered_franz <- cluser_1_franz %>%
filter(`Pair LOD Parent 1` > 3 | `Pair LOD Parent 2` > 3)
cluster_1_franz <- read_csv("franz-grouped/cluster1/parentage.csv")
filtered_franz <- cluser_1_franz %>%
filter(`Pair LOD Parent 1` > 3 | `Pair LOD Parent 2` > 3)
cluster_1_franz <- read_csv("franz-grouped/cluster1/parentage.csv")
names(cluster_1_franz)
filtered_franz <- cluser_1_franz %>%
filter(`Pair LOD Parent 1` > 3 | `Pair LOD Parent 2` > 3)
filtered_franz <- cluster_1_franz %>%
filter(`Pair LOD Parent 1` > 3 | `Pair LOD Parent 2` > 3)
filtered_fr
filtered_franz
?gather
filtered_franz %>%
gather(key=parent_num, value=parent_id, `Parent 1`, `Parent 2`, na.rm = T)
# filtering by high lod scores, gathering parent ids,
# removing na parent matches then doing an inner join off of parent id
convenient_parent_join <- coords %>%
rename(parent_id = Tree)
head(convenient_parent_join)
# filtering by high lod scores, gathering parent ids,
# removing na parent matches then doing an inner join off of parent id
convenient_parent_to_join <- coords %>%
rename(parent_id = Tree)
# filtering by high lod scores, gathering parent ids,
# removing na parent matches then doing an inner join off of parent id
convenient_parents_to_join <- coords %>%
rename(parent_id = Tree)
head(convenient_parents_join)
head(convenient_parents_to_join)
filtered_franz
filtered_franz <- cluster_1_franz %>%
filter(`Pair LOD Parent 1` > 3 | `Pair LOD Parent 2` > 3) %>%
rename(Tree=Offspring)
?inner_join
rm convenient_parent_join
rm(convenient_parent_join)
rm(convenient_parent_to_join)
inner_join(filtered_franz,convenient_parents_to_join, by="parent_id")
# filtering by high lod scores, gathering parent ids,
# removing na parent matches then doing an inner join off of parent id
convenient_parents_to_join <- coords %>%
rename(parent_id = Tree)
head(convenient_parents_to_join)
filtered_franz <- cluster_1_franz %>%
filter(`Pair LOD Parent 1` > 3 | `Pair LOD Parent 2` > 3) %>%
rename(Tree=Offspring) %>%
gather(key=parent_num, value=parent_id, `Parent 1`, `Parent 2`, na.rm = T)
inner_join(filtered_franz,convenient_parents_to_join, by="parent_id")
inner_join(filtered_franz,convenient_parents_to_join, by="parent_id") %>%
rename(parent_x = X, parent_y = Y)
inner_join(filtered_franz, convenient_parents_to_join, by="parent_id") %>%
rename(parent_x = X, parent_y = Y) %>%
inner_join(y=coords, by="Tree")
inner_join(filtered_franz, convenient_parents_to_join, by="parent_id") %>%
rename(parent_x = X, parent_y = Y) %>%
inner_join(y=coords, by="Tree") %>%
rename(offspring_x = X, offspring_y = Y)
franz_coords <- inner_join(filtered_franz,
convenient_parents_to_join,
by="parent_id") %>%
rename(parent_x = X, parent_y = Y) %>%
inner_join(y=coords, by="Tree") %>%
rename(offspring_x = X, offspring_y = Y)
names(franz_coords)
franz_coords <- inner_join(filtered_franz,
convenient_parents_to_join,
by="parent_id") %>%
rename(parent_x = X, parent_y = Y) %>%
select(-"Lat.x", -"Long.x") %>%
inner_join(y=coords, by="Tree") %>%
rename(offspring_x = X, offspring_y = Y)
names(franz_coords)
select(-"Lat.x", -"Long.x")
names(franz_coords)
select(-"Lat.x", -"Long.x")
franz_coords <- inner_join(filtered_franz,
convenient_parents_to_join,
by="parent_id") %>%
rename(parent_x = X, parent_y = Y) %>%
select(-"Lat.x", -"Long.x") %>%
inner_join(y=coords, by="Tree") %>%
rename(offspring_x = X, offspring_y = Y)%>%
select(-"Lat.x", -"Long.x")
franz_coords <- inner_join(filtered_franz,
convenient_parents_to_join,
by="parent_id") %>%
rename(parent_x = X, parent_y = Y) %>%
select(-"Lat.x", -"Long.x") %>%
inner_join(y=coords, by="Tree") %>%
rename(offspring_x = X, offspring_y = Y) %>%
select(-"Lat.x", -"Long.x")
franz_coords <- inner_join(filtered_franz, convenient_parents_to_join, by="parent_id") %>%
rename(parent_x = X, parent_y = Y) %>%
select(-"Lat.x", -"Long.x") %>%
inner_join(y=coords, by="Tree") %>%
rename(offspring_x = X, offspring_y = Y)
franz_coords <- inner_join(filtered_franz, convenient_parents_to_join, by="parent_id") %>%
rename(parent_x = X, parent_y = Y) %>%
select(-"Lat.x", -"Long.x") %>%
inner_join(y=coords, by="Tree") %>%
rename(offspring_x = X, offspring_y = Y)
names(franz_coords)
franz_coords <- inner_join(filtered_franz, convenient_parents_to_join, by="parent_id") %>%
rename(parent_x = X, parent_y = Y) %>%
select(-"Lat.x", -"Long.x") %>%
inner_join(y=coords, by="Tree") %>%
rename(offspring_x = X, offspring_y = Y)
franz_coords <- inner_join(filtered_franz, convenient_parents_to_join, by="parent_id") %>%
rename(parent_x = X, parent_y = Y) %>%
inner_join(y=coords, by="Tree") %>%
rename(offspring_x = X, offspring_y = Y)
select(-"Lat.x", -"Long.x")
"
franz_coords <- inner_join(filtered_franz, convenient_parents_to_join, by="parent_id") %>%
franz_coords <- inner_join(filtered_franz, convenient_parents_to_join, by="parent_id") %>%
rename(parent_x = X, parent_y = Y) %>%
inner_join(y=coords, by="Tree") %>%
rename(offspring_x = X, offspring_y = Y)
names(franz_coords)
franz_coords <- inner_join(filtered_franz, convenient_parents_to_join, by="parent_id") %>%
rename(parent_x = X, parent_y = Y) %>%
inner_join(y=coords, by="Tree") %>%
rename(offspring_x = X, offspring_y = Y) %>%
select(-"Lat.x", -"Long.x")
names(franz_coords)
franz_coords <- inner_join(filtered_franz, convenient_parents_to_join, by="parent_id") %>%
rename(parent_x = X, parent_y = Y) %>%
inner_join(y=coords, by="Tree") %>%
rename(offspring_x = X, offspring_y = Y) %>%
select(-"Lat.x", -"Long.x", -"Lat.y", -"Long.y")
names(franz_coords)
franz_coords <- inner_join(filtered_franz, convenient_parents_to_join, by="parent_id") %>%
rename(parent_x = X, parent_y = Y) %>%
inner_join(y=coords, by="Tree") %>%
rename(offspring_x = X, offspring_y = Y) %>%
select(-"Lat.x", -"Long.x", -"Lat.y", -"Long.y",
-"Lat '.x", -"Long '.x", -"Lat '.y", -"Long '.y", )
names(franz_coords)
filtered_franz <- cluster_1_franz %>%
rename(Tree=Offspring) %>%
gather(key=parent_num, value=parent_id, `Parent 1`, `Parent 2`, na.rm = T) %>%
gather(key=parent_num. value=parent_lod_score) %>%
filtered_franz <- cluster_1_franz %>%
rename(Tree=Offspring) %>%
gather(key=parent_num, value=parent_id, `Parent 1`, `Parent 2`, na.rm = T) %>%
gather(key=parent_num, value=parent_lod_score) %>%
filter(parent_lod_score > 3)
head(filtered_franz)
names(cluster_1_franz)
filtered_franz <- cluster_1_franz %>%
rename(Tree=Offspring) %>%
gather(key=parent_num, value=parent_id, `Parent 1`, `Parent 2`, na.rm = T) %>%
gather(key=parent_num, value=parent_lod_score, `Pair LOD Parent 1`, `Pair LOD Parent 1`) %>%
filter(parent_lod_score > 3)
head(filtered_franz)
head(filtered_franz)
names(filtered_franz)
franz_coords <- inner_join(filtered_franz, convenient_parents_to_join, by="parent_id") %>%
rename(parent_x = X, parent_y = Y) %>%
inner_join(y=coords, by="Tree") %>%
rename(offspring_x = X, offspring_y = Y) %>%
select(Tree, LOD, parent_lod, parent_x, parent_y, offspring_x, offspring_y)
franz_coords <- inner_join(filtered_franz, convenient_parents_to_join, by="parent_id") %>%
rename(parent_x = X, parent_y = Y) %>%
inner_join(y=coords, by="Tree") %>%
rename(offspring_x = X, offspring_y = Y) %>%
select(Tree, LOD, parent_lod_score, parent_x, parent_y, offspring_x, offspring_y)
ggmap(franz_coords) +
# geom_point(geno_coords, mapping=aes(X, Y), size = 0.5) +
geom_segment(confident_mat_pairwise_coords,
mapping=aes(x=parent_x, y=parent_y, xend=offspring_x, yend=offspring_y,
color=Tree),
arrow = arrow(
length = unit(0.01, "npc"),
type = "closed",
angle = 20),
size=1)
franz_map_area <- get_stamenmap(bbox=c(
left = min(franz_coords$offspring_x - 0.003),
bottom = min(franz_coords$offspring_y - 0.003),
right = max(franz_coords$offspring_x + 0.003),
top = max(franz_coords$offspring_y + 0.003)),
zoom = 14,
maptype = 'terrain')
ggmap(franz_map_area) +
# geom_point(geno_coords, mapping=aes(X, Y), size = 0.5) +
geom_segment(franz_coords,
mapping=aes(x=parent_x, y=parent_y, xend=offspring_x, yend=offspring_y,
color=Tree),
arrow = arrow(
length = unit(0.01, "npc"),
type = "closed",
angle = 20),
size=1)
library(geosphere)
mutate(distance = dist2line(c(parent_x, parent_y), c(offspring_x, offpsring_y))_
mutate(distance = dist2line(c(parent_x, parent_y), c(offspring_x, offpsring_y))
franz_distances <- franz_coords %>%
mutate(distance = dist2line(c(parent_x, parent_y), c(offspring_x, offpsring_y)))
franz_distances <- franz_coords %>%
mutate(distance = dist2line(c(parent_x, parent_y),
c(offspring_x, offpsring_y)))
library(geosphere)
franz_distances <- franz_coords %>%
mutate(distance = dist2line(c(parent_x, parent_y),
c(offspring_x, offpsring_y)))
?dist2line
source("~/Documents/BIOL 459W/distance_franz.R", echo=TRUE)
franz_distances
franz_distances <- franz_coords %>%
mutate(distance = dist2line(c(parent_x, parent_y),c(offspring_x, offpsring_y)))
franz_distances <- franz_coords %>%
mutate(distance = distCosine(c(parent_x, parent_y),c(offspring_x, offpsring_y)))
franz_coords %>% distCosine(c(parent_x, parent_y),c(offspring_x, offpsring_y)
franz_coords %>% distCosine(c(parent_x, parent_y),c(offspring_x, offpsring_y))
franz_coords %>% distCosine(c(parent_x, parent_y),c(offspring_x, offpsring_y))
franz_coords
franz_coords %>% distCosine(c(parent_x, parent_y),c(offspring_x, offpsring_y))
franz_coords
franz_distancese
franz_distances
franz_coords %>% distCosine(c(parent_x, parent_y),c(offspring_x, offpsring_y))
distCosine(c(franz_distances$parent_x, franz_distances$parent_y),c(franz_distances$offspring_x, franz_distances$offpsring_y))
distCosine(c(franz_coords$parent_x, franz_coords$parent_y),c(franz_coords$offspring_x, franz_coords$offpsring_y))
franz_distances <- franz_coords %>%
mutate(distance = distm(c(parent_x, parent_y),c(offspring_x, offpsring_y)))
franz_distances <- franz_coords %>%
mutate(coord_vector=c(parent_x,parent_y))
franz_distances <- franz_coords %>%
mutate(coord_vector=(parent_x,parent_y))
franz_distances <- franz_coords %>%
mutate(coord_vector=[parent_x,parent_y])
franz_distances <- franz_coords %>%
mutate(coord_vector=as.vector(parent_x,parent_y))
franz_distances
franz_distances <- franz_coords %>%
mutate(offspring_coord_vector=list(offspring_x, offspring_y))
franz_distances <- franz_coords %>%
mutate(distance = distm(list(parent_x, parent_y),list(offspring_x, offpsring_y)))
franz_distances <- franz_coords %>%
mutate(distance = distm(double(parent_x, parent_y),double(offspring_x, offpsring_y)))
franz_distances <- franz_coords %>%
mutate(distance = distm(list(parent_x, parent_y),list(offspring_x, offpsring_y)))
franz_distances <- franz_coords %>%
mutate(offspring_coord_vector=as.char(list(offspring_x, offspring_y)))
franz_distances <- franz_coords %>%
mutate(offspring_coord_vector=as.character(list(offspring_x, offspring_y)))
franz_distances <- franz_coords %>%
mutate(offspring_coord_vector=paste(as.characteer(offspring_x), as.character(offspring_y)))
franz_distances <- franz_coords %>%
mutate(offspring_coord_vector=paste(as.character(offspring_x), as.character(offspring_y)))
franz_distances
?strsplit
franz_distances <- franz_coords %>%
mutate(offspring_coord_vector=paste(as.character(offspring_x), as.character(offspring_y)))%>%
mutate(distance = distm(strsplit(offspring_coord_vector, " "),c(offspring_x, offpsring_y)))
franz_distances <- franz_coords %>%
mutate(offspring_coord_vector=paste(as.character(offspring_x), as.character(offspring_y)))%>%
mutate(distance = distm(strsplit(offspring_coord_vector, "/s"),c(offspring_x, offpsring_y)))
franz_distances <- franz_coords %>%
mutate(offspring_coord_vector=paste(as.character(offspring_x), as.character(offspring_y)))%>%
mutate(distance = distm(strsplit(offspring_coord_vector, "\ "),c(offspring_x, offpsring_y)))
franz_distances <- franz_coords %>%
mutate(offspring_coord_vector=paste(as.character(offspring_x), as.character(offspring_y)))%>%
mutate(distance = distm(strsplit(offspring_coord_vector, "[ ]"),c(offspring_x, offpsring_y)))
franz_distances <- franz_coords %>%
mutate(offspring_coord_vector=paste(as.character(offspring_x), as.character(offspring_y)))%>%
mutate(distance = distm(strsplit(offspring_coord_vector, "// "),c(offspring_x, offpsring_y)))
franz_distances <- franz_coords %>%
mutate(offspring_coord_vector=paste(as.character(offspring_x), as.character(offspring_y)))%>%
mutate(distance = distm(strsplit(offspring_coord_vector, " ", fixed=T),c(offspring_x, offpsring_y)))
strsplit(franz_distances$offspring_coord_vector, " ", fixed=T)
as.numeric(strsplit(franz_distances$offspring_coord_vector, " ", fixed=T))
strsplit(franz_distances$offspring_coord_vector, " ", fixed=T)
distm(strsplit(franz_distances$offspring_coord_vector[1], " ", fixed=T))
franz_distances$offspring_coord_vector[1]
strsplit(franz_distances$offspring_coord_vector[1], " ", fixed=T)
distm(strsplit(franz_distances$offspring_coord_vector[1], " ", fixed=T))
strsplit(franz_distances$offspring_coord_vector[1], " ", fixed=T)
distm(strsplit(c(franz_distances$offspring_coord_vector[1]), " ", fixed=T))
c(franz_distances$offspring_coord_vector[1])
distm(c(strsplit(franz_distances$offspring_coord_vector[1], " ", fixed=T)))
c(strsplit(franz_distances$offspring_coord_vector[1], " ", fixed=T))
len(c(strsplit(franz_distances$offspring_coord_vector[1], " ", fixed=T))
)
length(c(strsplit(franz_distances$offspring_coord_vector[1], " ", fixed=T)))
distm(as.vector(strsplit(franz_distances$offspring_coord_vector[1], " ", fixed=T)))
as.vector(strsplit(franz_distances$offspring_coord_vector[1], " ", fixed=T))
length(as.vector(strsplit(franz_distances$offspring_coord_vector[1], " ", fixed=T)))
as.vector(strsplit(franz_distances$offspring_coord_vector[1], " ", fixed=T))[2]
as.vector(strsplit(franz_distances$offspring_coord_vector[1], " ", fixed=T))[1]
as.vector(str_split_fixed(franz_distances$offspring_coord_vector[1], " ", fixed=T))
as.vector(str_split_fixed(franz_distances$offspring_coord_vector[1], " "))
as.vector(unlist(strsplit(franz_distances$offspring_coord_vector[1], " ", fixed=T)))
unlist(strsplit(franz_distances$offspring_coord_vector[1], " ", fixed=T))
franz_distances <- franz_coords %>%
mutate(offspring_coord_vector=paste(as.character(offspring_x), as.character(offspring_y)))%>%
mutate(distance = distm(strsplit(offspring_coord_vector, " ", fixed=T),
c(offspring_x, offpsring_y)))
franz_distances <- franz_coords %>%
mutate(offspring_coord_vector=paste(as.character(offspring_x), as.character(offspring_y))) %>%
mutate(parent_coord_vector=paste(as.character(parent_x), as.character(parent_y)))%>%
mutate(distance = distm(strsplit(offspring_coord_vector, " ", fixed=T),distm(strsplit(offspring_coord_vector, " ", fixed=T))))
franz_distances <- franz_coords %>%
mutate(offspring_coord_vector=paste(as.character(offspring_x), as.character(offspring_y))) %>%
mutate(parent_coord_vector=paste(as.character(parent_x), as.character(parent_y)))%>%
mutate(distance = unlist(distm(strsplit(offspring_coord_vector, " ", fixed=T)),
unlist(distm(strsplit(offspring_coord_vector, " ", fixed=T)))))
franz_distances <- franz_coords %>%
mutate(offspring_coord_vector=paste(as.character(offspring_x), as.character(offspring_y))) %>%
mutate(parent_coord_vector=paste(as.character(parent_x), as.character(parent_y)))%>%
mutate(distance = distm(strsplit(offspring_coord_vector, " ", fixed=T),
(strsplit(offspring_coord_vector, " ", fixed=T))))
franz_distances <- franz_coords %>%
mutate(offspring_coord_vector=paste(as.character(offspring_x), as.character(offspring_y))) %>%
mutate(parent_coord_vector=paste(as.character(parent_x), as.character(parent_y)))%>%
mutate(distance = distm(unlist(strsplit(offspring_coord_vector, " ", fixed=T)),
unlist(strsplit(offspring_coord_vector, " ", fixed=T))))
unlist(strsplit(offspring_coord_vector, " ", fixed=T)
unlist(strsplit(offspring_coord_vector, " ", fixed=T)
unlist(strsplit(offspring_coord_vector, " ", fixed=T))
unlist(strsplit(franz_coords$offspring_coord_vector, " ", fixed=T))
franz_distances <- franz_coords %>%
mutate(offspring_coord_vector=paste(as.character(offspring_x), as.character(offspring_y))) %>%
mutate(parent_coord_vector=paste(as.character(parent_x), as.character(parent_y)))
unlist(strsplit(franz_distances$offspring_coord_vector[1], " ", fixed=T))
length(unlist(strsplit(franz_distances$offspring_coord_vector[1], " ", fixed=T)))
franz_distances <- franz_coords %>%
mutate(offspring_coord_vector=paste(as.character(offspring_x), as.character(offspring_y))) %>%
mutate(parent_coord_vector=paste(as.character(parent_x), as.character(parent_y))) %>%
mutate(distance = distm(unlist(strsplit(offspring_coord_vector, " ", fixed=T)),
unlist(strsplit(parent_coord_vector, " ", fixed=T))))
distm(unlist(strsplit(franz_distances$offspring_coord_vector[1], " ", fixed=T)),
unlist(strsplit(franz_distances$parent_coord_vector[2], " ", fixed=T)))
distm(as.numeric(unlist(strsplit(franz_distances$offspring_coord_vector[1], " ", fixed=T))),
unlist(strsplit(franz_distances$parent_coord_vector[2], " ", fixed=T)))
distm(as.numeric(unlist(strsplit(franz_distances$offspring_coord_vector[1], " ", fixed=T))),
as.numeric(unlist(strsplit(franz_distances$parent_coord_vector[2], " ", fixed=T))))
distm(as.numeric(unlist(strsplit(franz_distances$offspring_coord_vector[2], " ", fixed=T))),
as.numeric(unlist(strsplit(franz_distances$parent_coord_vector[2], " ", fixed=T))))
distm(as.numeric(unlist(strsplit(franz_distances$offspring_coord_vector[1], " ", fixed=T))),
as.numeric(unlist(strsplit(franz_distances$parent_coord_vector[1], " ", fixed=T))))
franz_distances <- franz_coords %>%
mutate(offspring_coord_vector=paste(as.character(offspring_x), as.character(offspring_y))) %>%
mutate(parent_coord_vector=paste(as.character(parent_x), as.character(parent_y))) %>%
mutate(distance = distm(as.numeric(unlist(strsplit(offspring_coord_vector, " ", fixed=T))),
as.numeric(unlist(strsplit(parent_coord_vector, " ", fixed=T)))))
distm(as.numeric(unlist(strsplit(franz_distances$offspring_coord_vector[1], " ", fixed=T))),
as.numeric(unlist(strsplit(franz_distances$parent_coord_vector[1], " ", fixed=T))))
distm(as.numeric(unlist(strsplit(franz_distances$offspring_coord_vector, " ", fixed=T))),
as.numeric(unlist(strsplit(franz_distances$parent_coord_vector, " ", fixed=T))))
